basePath: /api/v1/
definitions:
  model.Ping:
    properties:
      email:
        type: string
    type: object
  utility.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        description: for errors that occur even if request is successful
      extra: {}
      message:
        type: string
      name:
        description: name of the error
        type: string
      status:
        type: string
    type: object
host: localhost:9000
info:
  contact: {}
  description: A picture mining service API in Go using Gin framework.
  title: Minergram
  version: "1.0"
paths:
  /api/v1/health:
    get:
      description: Responds with the server status as JSON.
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/utility.Response"
      summary: Checks the status of the server
      tags:
        - health
    post:
      description: Send a dummy post request to test the status of the server
      parameters:
        - description: Ping JSON
          in: body
          name: ping
          required: true
          schema:
            $ref: "#/definitions/model.Ping"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/utility.Response"
      summary: Checks the status of the server
      tags:
        - health
  /update-user:
    put:
      tags:
        - user
      summary: Update a user
      description: Update a user
      operationId: updateUser
      parameters:
        - name: email
          in: path
          description: "Email of the account, this is required"
          required: true
          schema:
            type: string

        - name: username
          in: path
          description: "Username of account"
          required: false
          schema:
            type: string

        - name: first_name
          in: path
          description: "First name of account"
          required: false
          schema:
            type: string

        - name: last_name
          in: path
          description: "Last name of account"
          required: false
          schema:
            type: string
        
        - name: current_password
          in: path
          description: "Current password of account"
          required: false
          schema:
            type: string

        - name: new_password
          in: path
          description: "New password to be set"
          required: false
          schema:
            type: string

        - name: confirm_password
        in: path
        description: "Repeat of password to be set"
        required: false
        schema:
          type: string

      responses:
        "200":
          description: user successfully updated
          content:
            application/json:
              schema:
                type: object

        "500":
          description: unable to update user
          content:
            application/json:
              schema:
                type: object
schemes:
  - http
swagger: "2.0"
