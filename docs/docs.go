// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
<<<<<<< HEAD
        "/admin/mined-images": {
            "get": {
                "description": "this returns the mined images of all users",
=======
        "/admin/users": {
            "get": {
                "description": "List all users",
>>>>>>> fd55bf3a6a78a333fafa32cd3a84e43150f39400
                "produces": [
                    "application/json"
                ],
                "tags": [
<<<<<<< HEAD
                    "Mined Images"
                ],
                "summary": "this returns the mined images of all users",
=======
                    "users"
                ],
                "summary": "List all users",
>>>>>>> fd55bf3a6a78a333fafa32cd3a84e43150f39400
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "$ref": "#/definitions/model.MinedImage"
=======
                                "$ref": "#/definitions/model.User"
>>>>>>> fd55bf3a6a78a333fafa32cd3a84e43150f39400
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "Responds with the server status as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Checks the status of the server",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utility.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Send a dummy post request to test the status of the server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Checks the status of the server",
                "parameters": [
                    {
                        "description": "Ping JSON",
                        "name": "ping",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Ping"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utility.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.MinedImage": {
            "type": "object",
            "properties": {
                "dateCreated": {
                    "type": "string"
                },
                "dateModified": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageKey": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePath": {
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "model.Ping": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "profile_key": {
                    "type": "string"
                },
                "profile_url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "utility.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error": {
                    "description": "for errors that occur even if request is successful"
                },
                "extra": {},
                "message": {
                    "type": "string"
                },
                "name": {
                    "description": "name of the error",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/api/v1/",
	Schemes:          []string{"http"},
	Title:            "Minergram",
	Description:      "A picture mining service API in Go using Gin framework.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
